// <auto-generated />
using System;
using BE__Small_Shop_Management_System.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BE__Small_Shop_Management_System.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250829152952_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.InventoryHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityChanged")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("InventoryHistories");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(5881),
                            Description = "Users View",
                            Module = "Users",
                            Name = "Users.View",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(5923),
                            Description = "Users Create",
                            Module = "Users",
                            Name = "Users.Create",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(5939),
                            Description = "Users Update",
                            Module = "Users",
                            Name = "Users.Update",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6005),
                            Description = "Users Delete",
                            Module = "Users",
                            Name = "Users.Delete",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6013),
                            Description = "Users Lock",
                            Module = "Users",
                            Name = "Users.Lock",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6021),
                            Description = "Users Unlock",
                            Module = "Users",
                            Name = "Users.Unlock",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6035),
                            Description = "Roles View",
                            Module = "Roles",
                            Name = "Roles.View",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6042),
                            Description = "Roles Create",
                            Module = "Roles",
                            Name = "Roles.Create",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6050),
                            Description = "Roles Update",
                            Module = "Roles",
                            Name = "Roles.Update",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6058),
                            Description = "Roles Delete",
                            Module = "Roles",
                            Name = "Roles.Delete",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6066),
                            Description = "Roles AssignPermissions",
                            Module = "Roles",
                            Name = "Roles.AssignPermissions",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6085),
                            Description = "Permissions View",
                            Module = "Permissions",
                            Name = "Permissions.View",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6092),
                            Description = "Permissions Create",
                            Module = "Permissions",
                            Name = "Permissions.Create",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6099),
                            Description = "Permissions Update",
                            Module = "Permissions",
                            Name = "Permissions.Update",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6112),
                            Description = "Permissions Delete",
                            Module = "Permissions",
                            Name = "Permissions.Delete",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6122),
                            Description = "Products View",
                            Module = "Products",
                            Name = "Products.View",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6130),
                            Description = "Products Create",
                            Module = "Products",
                            Name = "Products.Create",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6139),
                            Description = "Products Update",
                            Module = "Products",
                            Name = "Products.Update",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6146),
                            Description = "Products Delete",
                            Module = "Products",
                            Name = "Products.Delete",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6162),
                            Description = "Orders View",
                            Module = "Orders",
                            Name = "Orders.View",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6167),
                            Description = "Orders Create",
                            Module = "Orders",
                            Name = "Orders.Create",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6173),
                            Description = "Orders Update",
                            Module = "Orders",
                            Name = "Orders.Update",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6179),
                            Description = "Orders Delete",
                            Module = "Orders",
                            Name = "Orders.Delete",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6185),
                            Description = "Orders Process",
                            Module = "Orders",
                            Name = "Orders.Process",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6194),
                            Description = "Inventory View",
                            Module = "Inventory",
                            Name = "Inventory.View",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6202),
                            Description = "Inventory Import",
                            Module = "Inventory",
                            Name = "Inventory.Import",
                            PermissionId = 0
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2025, 8, 29, 15, 29, 50, 409, DateTimeKind.Utc).AddTicks(6254),
                            Description = "Reports ViewDashboard",
                            Module = "Reports",
                            Name = "Reports.ViewDashboard",
                            PermissionId = 0
                        });
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SellerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Seller"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Customer"
                        });
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 3
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 4
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 5
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 6
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 7
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 8
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 9
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 10
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 11
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 12
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 13
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 14
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 15
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 16
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 17
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 18
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 19
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 20
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 21
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 22
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 23
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 24
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 25
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 26
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 27
                        });
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.SystemLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SystemLogs");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@system.com",
                            IsActive = true,
                            PasswordHash = "$2a$11$8FIbWQVzUHeNix2HYTUQn.cQAPvRSMkViHMZrEfK1XZPUzx1ELe6W",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.UserPermission", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("UserPermissions");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.CartItem", b =>
                {
                    b.HasOne("BE__Small_Shop_Management_System.Models.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BE__Small_Shop_Management_System.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.InventoryHistory", b =>
                {
                    b.HasOne("BE__Small_Shop_Management_System.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Order", b =>
                {
                    b.HasOne("BE__Small_Shop_Management_System.Models.User", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.OrderItem", b =>
                {
                    b.HasOne("BE__Small_Shop_Management_System.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BE__Small_Shop_Management_System.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Payment", b =>
                {
                    b.HasOne("BE__Small_Shop_Management_System.Models.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("BE__Small_Shop_Management_System.Models.Payment", "OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Product", b =>
                {
                    b.HasOne("BE__Small_Shop_Management_System.Models.Category", null)
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("BE__Small_Shop_Management_System.Models.User", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.RolePermission", b =>
                {
                    b.HasOne("BE__Small_Shop_Management_System.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BE__Small_Shop_Management_System.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.SystemLog", b =>
                {
                    b.HasOne("BE__Small_Shop_Management_System.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.User", b =>
                {
                    b.HasOne("BE__Small_Shop_Management_System.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.UserPermission", b =>
                {
                    b.HasOne("BE__Small_Shop_Management_System.Models.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BE__Small_Shop_Management_System.Models.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.UserRole", b =>
                {
                    b.HasOne("BE__Small_Shop_Management_System.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BE__Small_Shop_Management_System.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Product", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("BE__Small_Shop_Management_System.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("UserPermissions");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
